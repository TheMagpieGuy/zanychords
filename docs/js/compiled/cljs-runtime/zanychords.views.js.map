{"version":3,"sources":["zanychords/views.cljs"],"mappings":"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","names":["zanychords.views/arc","reagent.core/adapt-react-class","zanychords.views/session","zanychords.views/get-chord-seq","session","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1","fexpr__44161","p1__44157#","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core/shuffle","p1__44158#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/identity","p1__44159#","c","cljs.core/flatten","cljs.core.repeat.cljs$core$IFn$_invoke$arity$2","p1__44160#","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/concat","cljs.core.partition.cljs$core$IFn$_invoke$arity$3","zanychords.views/add-progression-dlg","is-open","on-close","on-progression-added","progression","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","p1__44162#","p1__44163#","js/module$node_modules$$material_ui$core$Dialog$index.default","js/module$node_modules$$material_ui$core$DialogTitle$index.default","js/module$node_modules$$material_ui$core$Grid$index.default","js/module$node_modules$$material_ui$core$TextField$index.default","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","cljs.core/deref","js/module$node_modules$$material_ui$core$Button$index.default","G__44164","cljs.core/reset!","zanychords.views/add-session-dlg","on-session-added","session-title","selected-progression-titles","progressions","G__44169","re-frame.core/subscribe","p1__44165#","p1__44167#","p1__44166#","js/module$node_modules$react_select$dist$react_select_browser_cjs.default","js/document","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core/clj->js","p","G__44170","cljs.core/vec","p1__44168#","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic","zanychords.views/progressions","add-dlg-open","G__44172","p1__44171#","js/module$node_modules$$material_ui$core$Card$index.default","js/module$node_modules$$material_ui$core$CardContent$index.default","js/module$node_modules$$material_ui$core$List$index.default","iter__4582__auto__","s__44174","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__44176","cljs.core/chunk-buffer","i__44175","vec__44177","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__44173","cljs.core/chunk-rest","vec__44181","cljs.core/first","cljs.core/cons","cljs.core/rest","i","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","cljs.core/vector","js/module$node_modules$$material_ui$core$ListItem$index.default","js/module$node_modules$$material_ui$core$ListItemText$index.default","clojure.string.join.cljs$core$IFn$_invoke$arity$2","G__44180","G__44184","re-frame.core/dispatch","js/module$node_modules$$material_ui$icons$Delete.default","js/module$node_modules$$material_ui$core$Fab$index.default","js/module$node_modules$$material_ui$icons$Add.default","G__44185","zanychords.views/sesssions","sessions","G__44188","p1__44187#","s__44190","b__44192","i__44191","vec__44193","iter__44189","vec__44197","x","p1__44186#","G__44196","G__44200","G__44201","zanychords.views/chord-triplet","c1","c2","c3","beat","cljs.core/second","cljs.core/mod","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","zanychords.views/pratice-progressions-dialog","chord-seq","bpm","timeout-silent","and__4174__auto__","js/setTimeout","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/inc","cljs.core/not","vec__44203","p1__44202#","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","cljs.core/quot","js/module$node_modules$$material_ui$core$AppBar$index.default","js/module$node_modules$$material_ui$core$ToolBar$index.default","js/module$node_modules$$material_ui$core$IconButton$index.default","js/module$node_modules$$material_ui$icons$Close.default","js/module$node_modules$$material_ui$icons$Update.default","js/module$node_modules$$material_ui$core$Input$index.default","js/module$node_modules$$material_ui$icons$Restore.default","zanychords.views/practice","G__44209","selected-session","practice-dlg-open","p1__44206#","s","js/module$node_modules$$material_ui$lab$ToggleButton$index.default","p1__44207#","js/module$node_modules$$material_ui$icons$Shuffle.default","s__44211","b__44213","i__44212","vec__44214","p1__44208#","iter__44210","vec__44217","cljs.core/assoc-in","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3","js/module$node_modules$$material_ui$icons$PlayArrow.default","zanychords.views/main-panel","js/module$node_modules$$material_ui$core$Tabs$index.default","kee_frame.core.switch_route.cljs$core$IFn$_invoke$arity$variadic","route","js/module$node_modules$$material_ui$core$Tab$index.default","kee-frame.core/path-for","kee-frame.core/switch-route","cljs.core/chunk-first"],"sourcesContent":["(ns zanychords.views\r\n  (:require\r\n   [re-frame.core :as rf]\r\n   [reagent.core :as r]\r\n   [zanychords.subs :as subs]\r\n   [zanychords.events :as events]\r\n   [clojure.string :as str]\r\n   [\"@material-ui/core/AppBar\" :default AppBar]\r\n   [\"@material-ui/core/ToolBar\" :default ToolBar]\r\n   [\"@material-ui/core/Tabs\" :default Tabs]\r\n   [\"@material-ui/core/Tab\" :default Tab]\r\n   [\"@material-ui/core/Fab\" :default Fab]\r\n   [\"@material-ui/core/Dialog\" :default Dialog]\r\n   [\"@material-ui/core/DialogTitle\" :default DialogTitle]\r\n   [\"@material-ui/core/List\" :default List]\r\n   [\"@material-ui/core/ListItem\" :default ListItem]\r\n   [\"@material-ui/core/ListItemText\" :default ListItemText]\r\n   [\"@material-ui/core/Divider\" :default Divider]\r\n   [\"@material-ui/core/Paper\" :default Paper]\r\n   [\"@material-ui/core/Card\" :default Card]\r\n   [\"@material-ui/core/CardContent\" :default CardContent]\r\n   [\"@material-ui/core/TextField\" :default TextField]\r\n   [\"@material-ui/core/Button\" :default Button]\r\n   [\"@material-ui/core/MenuItem\" :default MenuItem]\r\n   [\"@material-ui/core/Input\" :default Input]\r\n   [\"@material-ui/lab/ToggleButton\" :default ToggleButton]\r\n   [\"@material-ui/core/Grid\" :default Grid]\r\n   [\"@material-ui/core/IconButton\" :default IconButton]\r\n   [\"@material-ui/icons/Add\" :default AddIcon]\r\n   [\"@material-ui/icons/Delete\" :default DeleteIcon]\r\n   [\"@material-ui/icons/Shuffle\" :default ShuffleIcon]\r\n   [\"@material-ui/icons/PlayArrow\" :default PlayIcon]\r\n   [\"@material-ui/icons/Close\" :default CloseIcon]\r\n   [\"@material-ui/icons/Pause\" :default PauseIcon]\r\n   [\"@material-ui/icons/Restore\" :default FasterIcon]\r\n   [\"@material-ui/icons/Update\" :default SlowerIcon]\r\n   [\"react-select\" :default Select]\r\n   [kee-frame.core :as k]))\r\n\r\n;There seems to be a bug where using the :> shortcut for react components causes a weird error (\"Cannot convert a Symbol value to a string\") so we just create our own shortcut with blackjack and... you know.\r\n(def arc r/adapt-react-class)\r\n\r\n(def session {:title \"Fette Session\" :shuffle true :progressions [{:title \"p1\" :chords [\"A1\" \"B1\" \"C1\"] :shuffle false :reps 1}\r\n                                                                  {:title \"p2\" :chords [\"A2\" \"B2\" \"C2\"] :shuffle false :reps 1}\r\n                                                                  {:title \"p3\" :chords [\"A3\" \"B3\" \"C3\"] :shuffle false :reps 1}\r\n                                                                  {:title \"p4\" :chords [\"A4\" \"B4\" \"C4\"] :shuffle false :reps 1}]})\r\n\r\n; Takes a session and returns a lazy sequence containing a\r\n; sliding window of size 3 with a sequence of chords\r\n(defn get-chord-seq [session]\r\n  (->> (repeatedly\r\n         (fn [] (->> session\r\n                     (#(update % :progressions shuffle))\r\n                     :progressions\r\n                     (map #(update % :chords (if (:shuffle %) shuffle identity)))\r\n                     (map #(update % :chords (fn [c] (flatten (repeat (:reps %) c)))))\r\n                     (map #(map (fn [c] [c (:title %)]) (:chords %)))\r\n                     (apply concat))\r\n           ))\r\n       (apply concat)\r\n       (partition 3 1)\r\n       ))\r\n\r\n(defn add-progression-dlg [is-open on-close on-progression-added]\r\n  (let [progression (r/atom {:title \"\" :chords \"\"})]\r\n    (fn [is-open on-close on-progression-added]\r\n      [:> Dialog {:open is-open :on-close on-close :full-width true}\r\n       [:> DialogTitle \"Add Progression\"]\r\n       [:> Grid {:container true :spacing 2 :style {:width \"100%\" :flex-grow 1 :margin \"0px\"}}\r\n        [:> Grid {:item true :xs 12}\r\n         [:> TextField {:label \"Progression Title\"\r\n                        :class \"gridchild\"\r\n                        :on-change #(swap! progression assoc :title (-> % .-target .-value))\r\n                        :value (:title @progression)}]]\r\n        [:> Grid {:item true :xs 12}\r\n         [:> TextField {:label \"Chords (Comma Separated)\"\r\n                        :class \"gridchild\"\r\n                        :on-change #(swap! progression assoc :chords (-> % .-target .-value))\r\n                        :value (:chords @progression)}]]\r\n        [:> Grid {:item true :xs 4 :sm 8}]\r\n        [:> Grid {:item true :xs 4 :sm 2}\r\n         [:> Button {:color \"primary\" :class \"gridchild\"\r\n                     :on-click (fn []\r\n                                 (on-close)\r\n                                 (on-progression-added @progression)\r\n                                 (reset! progression {:title \"\" :chords \"\"}))}\r\n          \"OK\"]]\r\n        [:> Grid {:item true :xs 4 :sm 2}\r\n         [:> Button {:color \"default\" :class \"gridchild\"\r\n                     :on-click (fn []\r\n                                 (on-close)\r\n                                 (reset! progression {:title \"\" :chords \"\"}))}\r\n          \"Cancel\"]]]])))\r\n\r\n(defn add-session-dlg [is-open on-close on-session-added]\r\n  (let [session-title (r/atom \"\")\r\n        selected-progression-titles (r/atom [])\r\n        progressions (rf/subscribe [::subs/progressions])]\r\n\r\n    (fn [is-open on-close on-session-added]\r\n      [:> Dialog {:open is-open :on-close on-close :full-width true}\r\n       [:> DialogTitle \"Add Session\"]\r\n       [:> Grid {:container true :spacing 2 :style {:width \"100%\" :flex-grow 1 :margin \"0px\"}}\r\n        [:> Grid {:item true :xs 12}\r\n         [:> TextField {:label \"Session Title\"\r\n                        :class \"gridchild\"\r\n                        :on-change #(reset! session-title (-> % .-target .-value))\r\n                        :value @session-title}]]\r\n        [:> Grid {:item true :xs 12}\r\n         [:> Select {:menu-portal-target (.-body js/document)\r\n                     :menu-position \"fixed\"\r\n                     :menu-placement \"auto\"\r\n                     :is-multi true\r\n                     :class \"gridchild\"\r\n                     :placeholder \"Select Progressions\"\r\n                     :value @selected-progression-titles\r\n                     :on-change #(reset! selected-progression-titles %)\r\n                     :styles {:menu-portal #(-> % js->clj (assoc :zIndex 9999) clj->js)}\r\n                     :options (map (fn [p] {:label (:title p) :value p}) @progressions)}]]\r\n\r\n        [:> Grid {:item true :xs 4 :sm 8}]\r\n        [:> Grid {:item true :xs 4 :sm 2}\r\n         [:> Button {:color    \"primary\"\r\n                     :class    \"gridchild\"\r\n                     :on-click (fn []\r\n                                 (on-close)\r\n                                 (on-session-added {:title        @session-title\r\n                                                    :shuffle      false\r\n                                                    :progressions (vec (map #(assoc\r\n                                                                               (-> % .-value (js->clj :keywordize-keys true))\r\n                                                                               :shuffle false\r\n                                                                               :reps 1)\r\n                                                                            @selected-progression-titles))})\r\n                                 (reset! selected-progression-titles [])\r\n                                 (reset! session-title \"\"))}\r\n          \"OK\"]]\r\n\r\n        [:> Grid {:item true :xs 4 :sm 2}\r\n         [:> Button {:color \"default\"\r\n                     :class \"gridchild\"\r\n                     :on-click (fn []\r\n                                 (on-close)\r\n                                 (reset! selected-progression-titles [])\r\n                                 (reset! session-title \"\"))}\r\n          \"Cancel\"]]]])))\r\n\r\n(defn progressions []\r\n  (let [add-dlg-open (r/atom false)\r\n        progressions (rf/subscribe [::subs/progressions])]\r\n    (fn []\r\n      [:div {:class \"hideoverflow\"}\r\n       ; Main list with existing progressions\r\n       [:> Grid {:container true :spacing 3 :justify \"center\"}\r\n        [:> Grid {:item true :xs 12 :sm 6}\r\n         [:> Card {:class \"margin10\"}\r\n          [:> CardContent\r\n           [:> List\r\n            (for [[i, progression] (map-indexed vector @progressions)]\r\n              [(arc ListItem) {:key i}\r\n               [(arc ListItemText) {:primary (:title progression) :secondary (str/join \",\" (:chords progression))}]\r\n               [(arc Button) {:on-click #(rf/dispatch [::events/delete-progression (:title progression)])} [(arc DeleteIcon)]]])]]]]]\r\n\r\n       ; Floating Action Button to add new progression\r\n       [:> Fab {:color :primary :on-click #(reset! add-dlg-open true) :class \"floatrightbottom\"}\r\n        [:> AddIcon]]\r\n\r\n       ; Dialog for adding new Progression\r\n       [add-progression-dlg @add-dlg-open\r\n        #(reset! add-dlg-open false)\r\n        #(rf/dispatch [::events/add-progression %])]])))\r\n\r\n(defn sesssions []\r\n  (let [add-dlg-open (r/atom false)\r\n        sessions (rf/subscribe [::subs/sessions])]\r\n    (fn []\r\n      [:div {:class \"hideoverflow\"}\r\n       ; Main list with existing session\r\n       [:> Grid {:container true :spacing 3 :justify \"center\"}\r\n        [:> Grid {:item true :xs 12 :sm 6}\r\n         [:> Card {:class \"margin10\"}\r\n          [:> CardContent\r\n           [:> List\r\n            (for [[i, session] (map-indexed vector @sessions)]\r\n              [(arc ListItem) {:key i}\r\n               [(arc ListItemText) {:primary (:title session)\r\n                                    :secondary (as-> session x\r\n                                                 (:progressions x)\r\n                                                 (map #(:title %) x)\r\n                                                 (str/join \",\" x))}]\r\n\r\n               [(arc Button) {:on-click #(rf/dispatch [::events/delete-session (:title session)])} [(arc DeleteIcon)]]])]]]]]\r\n\r\n       ; Floating Action Button to add new progression\r\n       [:> Fab {:color :primary :on-click #(reset! add-dlg-open true) :class \"floatrightbottom\"}\r\n        [:> AddIcon]]\r\n\r\n       ; Dialog for adding new Progression\r\n       [add-session-dlg @add-dlg-open\r\n        #(reset! add-dlg-open false)\r\n        #(rf/dispatch [::events/add-session %])]])))\r\n\r\n(defn chord-triplet [c1 c2 c3 beat]\r\n  (fn [c1 c2 c3 beat]\r\n    [:> Grid {:container true :spacing 3 :align-items \"center \" :justify \"center\" :style {:height \"100%\" :margin-top \"50px\" :overflow \"hidden\"}}\r\n     [:> Grid {:item true :xs 12 :style {:height \"20%\"}}\r\n      [:> Card {:style {:height \"100%\" :display \"flex\" :justify-content \"center\" :align-items \"center\":text-align \"center\" :font-size \"7em\"} }\r\n       [:span (-> c2 second str)]]]\r\n      [:> Grid {:item true :xs 4 :style {:height \"20%\"}}\r\n      [:> Card {:style {:height \"100%\" :display \"flex\" :justify-content \"center\" :align-items \"center\":text-align \"center\" :font-size \"3em\"} }\r\n       [:span (-> c3 first str)]]]\r\n     [:> Grid {:item true :xs 4 :style {:height \"30%\"}}\r\n      [:> Card {:style {:height \"100%\" :display \"flex\"\r\n                        :justify-content \"center\" :align-items \"center\"\r\n                        :text-align \"center\" :font-size \"5em\"\r\n                        :color (if (-> beat (mod 2) (= 0)) \"red\" \"black\")} }\r\n       [:span (-> c2 first str)]]]\r\n     [:> Grid {:item true :xs 4 :style {:height \"20%\"}}\r\n      [:> Card {:style {:height \"100%\" :display \"flex\" :justify-content \"center\" :align-items \"center\":text-align \"center\" ::font-size \"3em\"} }\r\n       [:span (-> c1 first str)]]]]))\r\n\r\n(defn pratice-progressions-dialog [chord-seq is-open on-close ]\r\n  (let [beat (r/atom 1)\r\n        bpm (r/atom 120)\r\n        timeout-silent (r/atom true)]\r\n    (fn [chord-seq is-open on-close]\r\n      (if (and is-open @timeout-silent) (do\r\n                    (reset! timeout-silent false)\r\n                    (js/setTimeout (fn []\r\n                                     (reset! timeout-silent true)\r\n                                     (swap! beat inc)\r\n                                     )\r\n                                   (-> 60 (/ @bpm) (* 1000)))))\r\n      (if (not is-open)\r\n        (reset! beat 0))\r\n\r\n      (let [[c1 c2 c3] (nth chord-seq (quot @beat 4))]\r\n        [:> Dialog {:full-screen true :open is-open :classes {:paper \"dlgpaper\"}}\r\n         [:> AppBar\r\n          [:> ToolBar\r\n           [:> IconButton {:on-click on-close}\r\n            [:> CloseIcon]]]]\r\n         [:> Grid {:container true :justify \"center\" :style {:height \"100%\"}}\r\n          [:> Grid {:item true :xs 12  :style {:height \"80%\"}}\r\n           [chord-triplet c1 c2 c3 @beat]]\r\n          [:> Grid {:item true :xs 2}\r\n           [:> Button {:style {:width \"100%\"} :on-click #(swap! bpm (fn [x] (- x 10)))}\r\n            [:> SlowerIcon]]]\r\n          [:> Grid {:item true :xs 2}\r\n           [:> Input {:type \"number\" :value @bpm :on-change #(reset! bpm (-> % .-target .-value))}]]\r\n          [:> Grid {:item true :xs 2}\r\n           [:> Button {:style {:width \"100%\"} :on-click #(swap! bpm (fn [x] (+ x 10)))}\r\n            [:> FasterIcon]]]]]))))\r\n\r\n(defn practice []\r\n  (let [sessions (rf/subscribe [::subs/sessions])\r\n        selected-session (r/atom (first @sessions))\r\n        practice-dlg-open (r/atom false)]\r\n    (fn []\r\n      [:div {:class \"hideoverflow\"}\r\n       [:> Dialog {:full-screen true}]\r\n       [:> Grid {:container true :spacing 3 :justify \"center\"}\r\n        [:> Grid {:item true :xs 12 :sm 6}\r\n         [:> Card {:class \"margin10\"}\r\n          [:> CardContent\r\n           [:> Grid {:container true :class \"gridchild\" :spacing 3}\r\n            [:> Grid {:item true :class \"gridchild\" :xs 10}\r\n             [:> Select {:options (map (fn [s] {:label (:title s) :value s}) @sessions)\r\n                         :menu-portal-target (.-body js/document)\r\n                         :menu-position \"fixed\"\r\n                         :menu-placement \"auto\"\r\n                         :value {:label (:title @selected-session) :value @selected-session}\r\n                         :on-change #(reset! selected-session (-> % .-value (js->clj :keywordize-keys true)))}]]\r\n            [:> Grid {:item true :class \"gridchild\" :xs 2}\r\n             [:> ToggleButton {:class \"gridchild\"\r\n                               :value \"shuffleProgressions\"\r\n                               :selected (:shuffle @selected-session)\r\n                               :on-change (fn [] (swap! selected-session #(update % :shuffle not)))}\r\n              [:> ShuffleIcon]]]\r\n            [:> Grid {:item true :xs 12 :class \"gridchild\"}\r\n\r\n             [:> List\r\n              (for [[i, progression] (map-indexed vector (:progressions @selected-session))]\r\n                [(arc ListItem) {:key i}\r\n                 [(arc ListItemText) {:primary (:title progression) :secondary (str/join \",\" (:chords progression))}]\r\n                 [(arc Input) {:type :number :placeholder \"Repetitions\"\r\n                               :on-change #(reset! selected-session\r\n                                                   (assoc-in @selected-session\r\n                                                             [:progressions i :reps] (-> % .-target .-value)))\r\n                               :value (-> @selected-session :progressions (nth i) :reps)}]\r\n                 [(arc ToggleButton) {:value    true\r\n                                      :selected (:shuffle progression)\r\n                                      :on-change #(swap! selected-session\r\n                                                         (fn [s] (update-in s [:progressions i :shuffle] not)))\r\n                                      }\r\n                  [(arc ShuffleIcon)]]\r\n                 ])]\r\n             ]]]]]\r\n\r\n        ; Practice progression dialog\r\n        [pratice-progressions-dialog (get-chord-seq @selected-session) @practice-dlg-open #(reset! practice-dlg-open false)]\r\n\r\n        ; Floating Action Button to start practice\r\n        [:> Fab {:color :primary :class \"floatrightbottom\" :on-click #(reset! practice-dlg-open true)}\r\n         [:> PlayIcon]]]])))\r\n\r\n(defn main-panel []\r\n  (let []\r\n    [:div\r\n     [:> AppBar {:position \"static\"}\r\n      [:> Tabs {:value\r\n                (k/switch-route (fn [route] (-> route :data :name))\r\n                                nil 0 :main 0 :progressions 0 :sessions 1 :practice 2)\r\n                :centered true}\r\n\r\n       [:> Tab {:label \"Progressions\" :component :a :href (k/path-for [:progressions])}]\r\n       [:> Tab {:label \"Sessions\" :component :a :href (k/path-for [:sessions])}]\r\n       [:> Tab {:label \"Practice\" :component :a :href (k/path-for [:practice])}]]]\r\n\r\n     [k/switch-route (fn [route] (-> route :data :name))\r\n      nil [:span \"INVALID ROUTE\"]\r\n      :main [:span \"main\"]\r\n      :progressions [progressions]\r\n      :sessions [sesssions]\r\n      :practice [practice]]\r\n     ]))\r\n"]}