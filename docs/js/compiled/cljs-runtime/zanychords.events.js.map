{"version":3,"sources":["zanychords/events.cljs"],"mappings":";;;;;;AAQA,AAAA,AAAMA,AACHC,AAASC;AADZ,AAEE,AAAA,AAACC,AACCF,AACC,AAAA,AAAA,AAAA,AAAA,AAACG,AACF,AAAAC,AAAkBO;AAAlB,AAAA,AAAAN,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAaK;AAAb,AAAA,AAAA,AACO,AAACT,AAAAA,AAAAA,AAAQS,AAAAA,AAAGC,AAAAA;;;AAEvB,AAAA,AAACZ,AAEA,AAAKW,AAAGE;AAAR,AACEF;;AAEH,AAAA,AAACX,AAEA,AAAAc,AAAKH;AAAL,AAAA,AAAAI,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASF;AAAT,AAAAG,AAAAD,AAAA,AAAA,AAAWE;AAAX,AACE,AAAKC,AAAoB,AAAA,AAAA,AAAAC,AAACC,AAAOH;AAAR,AAA6B,AAAAE,AAAA,AAACE;;;AACvD,AAAA,AAAA,AAAAC,AAACF,AAAOT;AAAR,AAA0B,AAAAW,AAACC,AAAOL;;;AAErC,AAAA,AAAClB,AAEA,AAAAwB,AAAKb;AAAL,AAAA,AAAAc,AAAAD;AAAA,AAAAR,AAAAS,AAAA,AAAA,AAASZ;AAAT,AAAAG,AAAAS,AAAA,AAAA,AAAWC;AAAX,AACE,AAAA,AAAA,AAAAC,AAACP,AAAOT;AAAR,AAAsB,AAAAgB,AAACJ,AAAOG;;;AAEjC,AAAA,AAAC1B,AAEA,AAAA4B,AAAKjB;AAAL,AAAA,AAAAkB,AAAAD;AAAA,AAAAZ,AAAAa,AAAA,AAAA,AAAShB;AAAT,AAAAG,AAAAa,AAAA,AAAA,AAAWC;AAAX,AACE,AAAA,AAAA,AAAAC,AAACX,AAAOT;AAAR,AAA0B,AAACqB,AAAO,AAAKC;AAAL,AAAQ,AAACC,AAAK,AAAA,AAAQD,AAAGH;AAAjCC;;;AAE7B,AAAA,AAAC/B,AAEA,AAAAmC,AAAKxB;AAAL,AAAA,AAAAyB,AAAAD;AAAA,AAAAnB,AAAAoB,AAAA,AAAA,AAASvB;AAAT,AAAAG,AAAAoB,AAAA,AAAA,AAAWN;AAAX,AACE,AAAA,AAAA,AAAAO,AAACjB,AAAOT;AAAR,AAAsB,AAACqB,AAAO,AAAKC;AAAL,AAAQ,AAACC,AAAK,AAAA,AAAQD,AAAGH;AAAjCO","names":["zanychords.events/reg-event-db-localstorage","event-id","handler","re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3","akiroz.re-frame.storage/persist-db-keys","p__83073","map__83074","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","db","event-vec","_","p__83079","vec__83080","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","progression","zanychords.events/progression-updated","p1__83077#","cljs.core.update.cljs$core$IFn$_invoke$arity$3","clojure.string.split.cljs$core$IFn$_invoke$arity$2","p1__83078#","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","p__83084","vec__83085","session","p1__83083#","p__83089","vec__83090","title","p1__83088#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","p","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","p__83095","vec__83096","p1__83094#"],"sourcesContent":["(ns zanychords.events\r\n  (:require\r\n   [re-frame.core :as rf]\r\n   [zanychords.db :as db]\r\n   [clojure.string :as str]\r\n   [akiroz.re-frame.storage :refer [persist-db-keys]]\r\n   ))\r\n\r\n(defn reg-event-db-localstorage\r\n  [event-id handler]\r\n  (rf/reg-event-fx\r\n    event-id\r\n    [(persist-db-keys :zanychords [:progressions :sessions])]\r\n    (fn [{:keys [db]} event-vec]\r\n      {:db (handler db event-vec)})))\r\n\r\n(reg-event-db-localstorage\r\n ::initialize-db\r\n (fn [db _]\r\n   db))\r\n\r\n(reg-event-db-localstorage\r\n ::add-progression\r\n (fn [db [_ progression]]\r\n   (def progression-updated (update progression :chords #(str/split % #\",\")))\r\n   (update db :progressions #(conj % progression-updated))))\r\n\r\n(reg-event-db-localstorage\r\n ::add-session\r\n (fn [db [_ session]]\r\n   (update db :sessions #(conj % session))))\r\n\r\n(reg-event-db-localstorage\r\n ::delete-progression\r\n (fn [db [_ title]]   \r\n   (update db :progressions #(filter (fn [p] (not= (:title p) title)) %))))\r\n\r\n(reg-event-db-localstorage\r\n ::delete-session\r\n (fn [db [_ title]]\r\n   (update db :sessions #(filter (fn [p] (not= (:title p) title)) %))))\r\n"]}