{
"version":3,
"file":"module$node_modules$$material_ui$core$Modal$TrapFocus.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@material-ui/core/Modal/TrapFocus.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$material_ui$core$Modal$TrapFocus\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\n\n/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\n\n/**\n * @ignore - internal component.\n */\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = (0, _useForkRef.default)(children.ref, handleOwnRef); // \u26a0\ufe0f You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open || typeof window === 'undefined') {\n      return;\n    }\n\n    nodeToRestore.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = (0, _ownerDocument.default)(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var contain = function contain() {\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', contain, true);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      contain();\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focus', contain, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: _propTypes.default.element.isRequired,\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: _propTypes.default.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: _propTypes.default.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: _propTypes.default.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: _propTypes.default.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This prop helps nesting TrapFocus elements.\n   */\n  isEnabled: _propTypes.default.func.isRequired,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: _propTypes.default.bool.isRequired\n} : void 0;\n/*\n\nIn the future, we should be able to replace TrapFocus with:\nhttps://github.com/facebook/react/blob/master/packages/react-events/docs/FocusScope.md\n\n```jsx\nimport FocusScope from 'react-dom/FocusScope';\n\nfunction TrapFocus(props) {\n  const {\n    children\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    open,\n  } = props;\n\n  if (!open) {\n    return children;\n  }\n\n  return (\n    <FocusScope\n      autoFocus={!disableAutoFocus}\n      contain={!disableEnforceFocus}\n      restoreFocus={!disableRestoreFocus}\n    >\n      {children}\n    </FocusScope>\n  );\n}\n```\n\n*/\n\nvar _default = TrapFocus;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","TrapFocus","props","children","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","React","useRef","sentinelStart","sentinelEnd","nodeToRestore","rootRef","handleOwnRef","useCallback","instance","current","ReactDOM","findDOMNode","handleRef","_useForkRef","default","ref","useMemo","window","activeElement","useEffect","doc","_ownerDocument","contains","hasAttribute","console","error","setAttribute","focus","contain","loopFocus","event","keyCode","shiftKey","addEventListener","interval","setInterval","clearInterval","removeEventListener","createElement","Fragment","tabIndex","cloneElement","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","value","_propTypes","propTypes","element","isRequired","bool","func"]
}
