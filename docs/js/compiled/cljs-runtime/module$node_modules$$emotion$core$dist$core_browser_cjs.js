shadow$provide.module$node_modules$$emotion$core$dist$core_browser_cjs=function(global,require,module,exports){function _interopDefault(ex){return ex&&"object"===typeof ex&&"default"in ex?ex["default"]:ex}Object.defineProperty(exports,"__esModule",{value:!0});var _inheritsLoose=_interopDefault(require("module$node_modules$$babel$runtime$helpers$inheritsLoose")),React=require("module$node_modules$react$index");global=_interopDefault(require("module$node_modules$$emotion$cache$dist$cache_browser_cjs"));
var utils=require("module$node_modules$$emotion$utils$dist$utils_browser_cjs"),serialize=require("module$node_modules$$emotion$serialize$dist$serialize_browser_cjs"),sheet=require("module$node_modules$$emotion$sheet$dist$sheet_browser_cjs"),css$jscomp$0=_interopDefault(require("module$node_modules$$emotion$css$dist$css_browser_cjs")),EmotionCacheContext=React.createContext("undefined"!==typeof HTMLElement?global():null),ThemeContext=React.createContext({});require=EmotionCacheContext.Provider;exports.withEmotionCache=
function(func){return React.forwardRef(function(props,ref){return React.createElement(EmotionCacheContext.Consumer,null,function(cache){return func(props,cache,ref)})})};var hasOwnProperty=Object.prototype.hasOwnProperty,render=function(cache,props,theme,ref){var cssProp=null===theme?props.css:props.css(theme);"string"===typeof cssProp&&void 0!==cache.registered[cssProp]&&(cssProp=cache.registered[cssProp]);theme=props.__EMOTION_TYPE_PLEASE_DO_NOT_USE__;var registeredStyles=[cssProp];cssProp="";"string"===
typeof props.className?cssProp=utils.getRegisteredStyles(cache.registered,registeredStyles,props.className):null!=props.className&&(cssProp=props.className+" ");registeredStyles=serialize.serializeStyles(registeredStyles);if(-1===registeredStyles.name.indexOf("-")){var labelFromStack=props.__EMOTION_LABEL_PLEASE_DO_NOT_USE__;labelFromStack&&(registeredStyles=serialize.serializeStyles([registeredStyles,"label:"+labelFromStack+";"]))}utils.insertStyles(cache,registeredStyles,"string"===typeof theme);
cssProp+=cache.key+"-"+registeredStyles.name;cache={};for(var key in props)hasOwnProperty.call(props,key)&&"css"!==key&&"__EMOTION_TYPE_PLEASE_DO_NOT_USE__"!==key&&"__EMOTION_LABEL_PLEASE_DO_NOT_USE__"!==key&&(cache[key]=props[key]);cache.ref=ref;cache.className=cssProp;return React.createElement(theme,cache)},Emotion=exports.withEmotionCache(function(props,cache,ref){return"function"===typeof props.css?React.createElement(ThemeContext.Consumer,null,function(theme){return render(cache,props,theme,
ref)}):render(cache,props,null,ref)});Emotion.displayName="EmotionCssPropInternal";var warnedAboutCssPropForGlobal=!1;global=exports.withEmotionCache(function(props,cache){warnedAboutCssPropForGlobal||!props.className&&!props.css||(console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?"),warnedAboutCssPropForGlobal=!0);var styles=props.styles;if("function"===typeof styles)return React.createElement(ThemeContext.Consumer,null,function(theme){theme=
serialize.serializeStyles([styles(theme)]);return React.createElement(InnerGlobal,{serialized:theme,cache:cache})});props=serialize.serializeStyles([styles]);return React.createElement(InnerGlobal,{serialized:props,cache:cache})});var InnerGlobal=function(_React$Component){function InnerGlobal(props,context,updater){return _React$Component.call(this,props,context,updater)||this}_inheritsLoose(InnerGlobal,_React$Component);var _proto=InnerGlobal.prototype;_proto.componentDidMount=function(){this.sheet=
new sheet.StyleSheet({key:this.props.cache.key+"-global",nonce:this.props.cache.sheet.nonce,container:this.props.cache.sheet.container});var node=document.querySelector("style[data-emotion-"+this.props.cache.key+'\x3d"'+this.props.serialized.name+'"]');null!==node&&this.sheet.tags.push(node);this.props.cache.sheet.tags.length&&(this.sheet.before=this.props.cache.sheet.tags[0]);this.insertStyles()};_proto.componentDidUpdate=function(prevProps){prevProps.serialized.name!==this.props.serialized.name&&
this.insertStyles()};_proto.insertStyles=function(){void 0!==this.props.serialized.next&&utils.insertStyles(this.props.cache,this.props.serialized.next,!0);this.sheet.tags.length&&(this.sheet.before=this.sheet.tags[this.sheet.tags.length-1].nextElementSibling,this.sheet.flush());this.props.cache.insert("",this.props.serialized,this.sheet,!1)};_proto.componentWillUnmount=function(){this.sheet.flush()};_proto.render=function(){return null};return InnerGlobal}(React.Component),classnames=function classnames(args){for(var len=
args.length,i=0,cls="";i<len;i++){var arg=args[i];if(null!=arg){var toAdd=void 0;switch(typeof arg){case "boolean":break;case "object":if(Array.isArray(arg))toAdd=classnames(arg);else{toAdd="";for(var k in arg)arg[k]&&k&&(toAdd&&(toAdd+=" "),toAdd+=k)}break;default:toAdd=arg}toAdd&&(cls&&(cls+=" "),cls+=toAdd)}}return cls};module=exports.withEmotionCache(function(props,context){return React.createElement(ThemeContext.Consumer,null,function(theme){var hasRendered=!1,css=function(){if(hasRendered)throw Error("css can only be used during render");
for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];_len=serialize.serializeStyles(args,context.registered);utils.insertStyles(context,_len,!1);return context.key+"-"+_len.name};theme=props.children({css:css,cx:function(){if(hasRendered)throw Error("cx can only be used during render");for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];_len2=classnames(args);args=[];_key2=utils.getRegisteredStyles(context.registered,
args,_len2);_len2=2>args.length?_len2:_key2+css(args);return _len2},theme:theme});hasRendered=!0;return theme})});exports.css=css$jscomp$0;exports.CacheProvider=require;exports.ClassNames=module;exports.Global=global;exports.ThemeContext=ThemeContext;exports.jsx=function(type,props){var args=arguments;if(null==props||!hasOwnProperty.call(props,"css"))return React.createElement.apply(void 0,args);if("string"===typeof props.css&&-1!==props.css.indexOf(":"))throw Error("Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`"+
props.css+"`");var argsLength=args.length,createElementArgArray=Array(argsLength);createElementArgArray[0]=Emotion;var newProps={};for(key in props)hasOwnProperty.call(props,key)&&(newProps[key]=props[key]);newProps.__EMOTION_TYPE_PLEASE_DO_NOT_USE__=type;var key=Error();if(key.stack){var match=key.stack.match(/at (?:Object\.|)jsx.*\n\s+at ([A-Z][A-Za-z$]+) /);match||(match=key.stack.match(/.*\n([A-Z][A-Za-z$]+)@/));match&&(newProps.__EMOTION_LABEL_PLEASE_DO_NOT_USE__=match[1].replace(/\$/g,"-"))}createElementArgArray[1]=
newProps;for(newProps=2;newProps<argsLength;newProps++)createElementArgArray[newProps]=args[newProps];return React.createElement.apply(null,createElementArgArray)};exports.keyframes=function(){var insertable=css$jscomp$0.apply(void 0,arguments),name="animation-"+insertable.name;return{name:name,styles:"@keyframes "+name+"{"+insertable.styles+"}",anim:1,toString:function(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_"}}}}
//# sourceMappingURL=module$node_modules$$emotion$core$dist$core_browser_cjs.js.map
